{
  "name": "connect-memcached",
  "version": "0.0.6",
  "description": "Memcached session store for Connect",
  "keywords": [
    "memcached",
    "connection",
    "session",
    "store",
    "cache"
  ],
  "author": {
    "name": "MichaÅ‚ Thoma",
    "email": "me@balor.pl"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/tmont/connect-memcached"
  },
  "dependencies": {
    "memcached": "0.2.2"
  },
  "engines": {
    "node": ">=0.4.7"
  },
  "directories": {
    "lib": "./lib"
  },
  "readme": "# connect-memcached\n\n  Memcached session store, using [node-memcached](http://github.com/3rd-Eden/node-memcached) for communication with cache server.\n\n## Installation\n\n  via npm:\n\n      $ npm install connect-memcached\n\n## Example\n```javascript\n      /**\n      * Module dependencies.\n      */\n\n      var express = require('express');\n\n      // pass the express to the connect memcached module\n      // allowing it to inherit from express.session.Store\n      var MemcachedStore = require('connect-memcached')(express);\n\n      var app = express();\n\n      app.use(express.favicon());\n\n      // request logging\n      app.use(express.logger());\n\n      // required to parse the session cookie\n      app.use(express.cookieParser());\n\n      // Populates:\n      // - req.session\n      // - req.sessionStore\n      // - req.sessionID (or req.session.id)\n\n      app.use(express.session({\n        secret: 'CatOnTheKeyboard',\n        store: new MemcachedStore({\n          hosts: [ '127.0.0.1:11211' ] // Change this to your memcache server(s). See Options for additional info.\n        })\n      }));\n\n      app.get('/', function(req, res){\n        if (req.session.views) {\n          ++req.session.views;\n        } else {\n          req.session.views = 1;\n        }\n        res.send('Viewed <strong>' + req.session.views + '</strong> times.');\n      });\n\n      app.listen(3000);\n      console.log('Express app started on port 3000');\n```\n\n## Options\n- `hosts` Memcached servers locations, can by string, array, hash.\n- `prefix` An optional prefix for each memcache key, in case you are sharing\n           your memcached servers with something generating its own keys.\n- ...     Rest of given option will be passed directly to the node-memcached constructor.\n\nFor details see [node-memcached](http://github.com/3rd-Eden/node-memcached).\n\n## Contributors\n\nBig thanks for the priceless contributors! See the actual list [here](https://github.com/balor/connect-memcached/graphs/contributors)!\n\n## License\n\n(The MIT License)\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n'Software'), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n",
  "readmeFilename": "Readme.md",
  "bugs": {
    "url": "https://github.com/tmont/connect-memcached/issues"
  },
  "_id": "connect-memcached@0.0.6",
  "_from": "connect-memcached@0.0.6"
}
